package com.core.connector.soup.msgs;

/**
 * User: jgreco
 * THIS FILE IS AUTOGENERATED
 */
public class SoupTestDispatcher extends SoupBaseDispatcher {
    public boolean dispatch(SoupCommonCommand msg1) {
        SoupCommonEvent msg = (SoupCommonEvent)msg1;
        switch (msg.getMsgType()) {
            case '+':
                return dispatchSoupDebug((SoupDebugEvent)msg);
            case 'A':
                return dispatchSoupLoginAccepted((SoupLoginAcceptedEvent)msg);
            case 'J':
                return dispatchSoupLoginRejected((SoupLoginRejectedEvent)msg);
            case 'S':
                return dispatchSoupSequencedData((SoupSequencedDataEvent)msg);
            case 'H':
                return dispatchSoupServerHeartbeat((SoupServerHeartbeatEvent)msg);
            case 'Z':
                return dispatchSoupEndOfSession((SoupEndOfSessionEvent)msg);
            case 'L':
                return dispatchSoupLoginRequest((SoupLoginRequestEvent)msg);
            case 'U':
                return dispatchSoupUnsequencedData((SoupUnsequencedDataEvent)msg);
            case 'R':
                return dispatchSoupClientHeartbeat((SoupClientHeartbeatEvent)msg);
            case 'O':
                return dispatchSoupLogoutRequest((SoupLogoutRequestEvent)msg);
            default:
                return false;
        }
    }

    public void setLastTimestamp(long timestamp) {
        this.lastTimestamp = timestamp; 
    }
}

