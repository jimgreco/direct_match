package com.core.match.msgs;

/**
 * User: jgreco
 * THIS FILE IS AUTOGENERATED
 */
public class MatchTestDispatcher extends MatchBaseDispatcher {
    public boolean dispatch(MatchCommonCommand msg1) {
        MatchCommonEvent msg = (MatchCommonEvent)msg1;
        switch (msg.getMsgType()) {
            case 'C':
                return dispatchMatchContributor((MatchContributorEvent)msg);
            case 'T':
                return dispatchMatchTrader((MatchTraderEvent)msg);
            case 'E':
                return dispatchMatchSystemEvent((MatchSystemEventEvent)msg);
            case 'A':
                return dispatchMatchAccount((MatchAccountEvent)msg);
            case 'S':
                return dispatchMatchSecurity((MatchSecurityEvent)msg);
            case 'O':
                return dispatchMatchOrder((MatchOrderEvent)msg);
            case 'P':
                return dispatchMatchClientOrderReject((MatchClientOrderRejectEvent)msg);
            case 'Q':
                return dispatchMatchOrderReject((MatchOrderRejectEvent)msg);
            case 'X':
                return dispatchMatchCancel((MatchCancelEvent)msg);
            case 'Y':
                return dispatchMatchClientCancelReplaceReject((MatchClientCancelReplaceRejectEvent)msg);
            case 'Z':
                return dispatchMatchCancelReplaceReject((MatchCancelReplaceRejectEvent)msg);
            case 'U':
                return dispatchMatchReplace((MatchReplaceEvent)msg);
            case 'F':
                return dispatchMatchFill((MatchFillEvent)msg);
            case 'I':
                return dispatchMatchInbound((MatchInboundEvent)msg);
            case 'J':
                return dispatchMatchOutbound((MatchOutboundEvent)msg);
            case 'D':
                return dispatchMatchQuote((MatchQuoteEvent)msg);
            case 'M':
                return dispatchMatchMiscReject((MatchMiscRejectEvent)msg);
            default:
                return false;
        }
    }

    public void setLastTimestamp(long timestamp) {
        this.lastTimestamp = timestamp; 
    }
}

