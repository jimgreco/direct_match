package com.core.match.ouch.msgs;

/**
 * User: jgreco
 * THIS FILE IS AUTOGENERATED
 */
public class OUCHTestDispatcher extends OUCHBaseDispatcher {
    public boolean dispatch(OUCHCommonCommand msg1) {
        OUCHCommonEvent msg = (OUCHCommonEvent)msg1;
        switch (msg.getMsgType()) {
            case 'T':
                return dispatchOUCHTradeConfirmation((OUCHTradeConfirmationEvent)msg);
            case 'O':
                return dispatchOUCHOrder((OUCHOrderEvent)msg);
            case 'X':
                return dispatchOUCHCancel((OUCHCancelEvent)msg);
            case 'U':
                return dispatchOUCHReplace((OUCHReplaceEvent)msg);
            case 'A':
                return dispatchOUCHAccepted((OUCHAcceptedEvent)msg);
            case 'C':
                return dispatchOUCHCanceled((OUCHCanceledEvent)msg);
            case 'M':
                return dispatchOUCHReplaced((OUCHReplacedEvent)msg);
            case 'I':
                return dispatchOUCHCancelRejected((OUCHCancelRejectedEvent)msg);
            case 'J':
                return dispatchOUCHRejected((OUCHRejectedEvent)msg);
            case 'E':
                return dispatchOUCHFill((OUCHFillEvent)msg);
            default:
                return false;
        }
    }

    public void setLastTimestamp(long timestamp) {
        this.lastTimestamp = timestamp; 
    }
}

