package com.core.match.itch.msgs;

import java.nio.ByteBuffer;

/**
 * User: jgreco
 * THIS FILE IS AUTOGENERATED
 */
public class ITCHByteBufferDispatcher extends ITCHBaseDispatcher implements com.core.connector.ByteBufferDispatcher {
    private final ITCHMessages msgs;

    public ITCHByteBufferDispatcher(ITCHMessages msgs) {
        this.msgs = msgs;
    }

    @Override
    public boolean dispatch(ByteBuffer buffer) {
        char msgType = (char)buffer.get(buffer.position() + 0);
        switch (msgType) {
            case 'S':
                return dispatchITCHSystem(msgs.getITCHSystemEvent(buffer));
            case 'R':
                return dispatchITCHSecurity(msgs.getITCHSecurityEvent(buffer));
            case 'A':
                return dispatchITCHOrder(msgs.getITCHOrderEvent(buffer));
            case 'X':
                return dispatchITCHOrderCancel(msgs.getITCHOrderCancelEvent(buffer));
            case 'E':
                return dispatchITCHOrderExecuted(msgs.getITCHOrderExecutedEvent(buffer));
            case 'P':
                return dispatchITCHTrade(msgs.getITCHTradeEvent(buffer));
            default:
                return false;
        }
    }
}
