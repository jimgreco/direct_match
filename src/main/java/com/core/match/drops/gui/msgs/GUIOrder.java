package com.core.match.drops.gui.msgs;

import com.core.match.drops.DropVersionable;
import com.core.match.drops.gui.GUIUtils;

import java.nio.ByteBuffer; 

/* THIS FILE IS AUTOGENERATED */
public class GUIOrder implements DropVersionable {
    private static final byte[] TYPE_BYTES = "\"type\":".getBytes();  
    private static final byte[] SEC_BYTES = ",\"sec\":".getBytes();
    private static final byte[] SIDE_BYTES = ",\"side\":".getBytes();
    private static final byte[] POS_BYTES = ",\"pos\":".getBytes();
    private static final byte[] PX_BYTES = ",\"px\":".getBytes();
    private static final byte[] QTY_BYTES = ",\"qty\":".getBytes();
    private static final byte[] ORDERID_BYTES = ",\"orderID\":".getBytes();
    private static final byte[] SES_BYTES = ",\"ses\":".getBytes();
    private static final byte[] CONTRIB_BYTES = ",\"contrib\":".getBytes();
    private static final byte[] ID_BYTES = ",\"id\":".getBytes();
    private static final byte[] VER_BYTES = ",\"ver\":".getBytes();
    private static final byte[] TIME_BYTES = ",\"time\":".getBytes();

    private final String sec; 
    private final boolean side; 
    private final int pos; 
	private long px;
	private int qty;
	private int orderID;
    private final int id; 
	private int ver;
	private long time;

    public GUIOrder(
		int id
        , String sec
        , boolean side
        , int pos
		) {
        this.sec = sec;
        this.side = side;
        this.pos = pos;
        this.id = id;
    }

	public void write(ByteBuffer buffer, String ses, String contrib) {
		GUIUtils.startObject(buffer);
		GUIUtils.writeString(buffer, TYPE_BYTES, getType());		
		GUIUtils.writeString(buffer, SEC_BYTES, getSec());		
		GUIUtils.writeBidOffer(buffer, SIDE_BYTES, getSide());		
		GUIUtils.writeInt(buffer, POS_BYTES, getPos());		
		GUIUtils.writeLong(buffer, PX_BYTES, getPx());		
		GUIUtils.writeQty(buffer, QTY_BYTES, getQty());		
		GUIUtils.writeInt(buffer, ORDERID_BYTES, getOrderID());		
		GUIUtils.writeString(buffer, SES_BYTES, ses);
		GUIUtils.writeString(buffer, CONTRIB_BYTES, contrib);
		GUIUtils.writeInt(buffer, ID_BYTES, getId());		
		GUIUtils.writeInt(buffer, VER_BYTES, getVer());		
		GUIUtils.writeTime(buffer, TIME_BYTES, getTime());		
		GUIUtils.endObject(buffer);
    }
  
    public String getSec() {
        return sec;
    }
  
    public boolean getSide() {
        return side;
    }
  
    public int getPos() {
        return pos;
    }
  
    public long getPx() {
        return px;
    }
  
    public int getQty() {
        return qty;
    }
  
    public int getOrderID() {
        return orderID;
    }
  
    public int getId() {
        return id;
    }
  
    public int getVer() {
        return ver;
    }
  
    public long getTime() {
        return time;
    }

	public void setPx(long val) {
		this.px = val;
	}

	public void setQty(int val) {
		this.qty = val;
	}

	public void setOrderID(int val) {
		this.orderID = val;
	}

	public void setVer(int val) {
		this.ver = val;
	}

	public void setTime(long val) {
		this.time = val;
	}
	
	public String getType() {
		return "order";
	}
} 
