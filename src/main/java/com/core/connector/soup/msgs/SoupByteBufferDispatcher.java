package com.core.connector.soup.msgs;

import java.nio.ByteBuffer;

/**
 * User: jgreco
 * THIS FILE IS AUTOGENERATED
 */
public class SoupByteBufferDispatcher extends SoupBaseDispatcher implements com.core.connector.ByteBufferDispatcher {
    private final SoupMessages msgs;

    public SoupByteBufferDispatcher(SoupMessages msgs) {
        this.msgs = msgs;
    }

    @Override
    public boolean dispatch(ByteBuffer buffer) {
        char msgType = (char)buffer.get(buffer.position() + 2);
        switch (msgType) {
            case '+':
                return dispatchSoupDebug(msgs.getSoupDebugEvent(buffer));
            case 'A':
                return dispatchSoupLoginAccepted(msgs.getSoupLoginAcceptedEvent(buffer));
            case 'J':
                return dispatchSoupLoginRejected(msgs.getSoupLoginRejectedEvent(buffer));
            case 'S':
                return dispatchSoupSequencedData(msgs.getSoupSequencedDataEvent(buffer));
            case 'H':
                return dispatchSoupServerHeartbeat(msgs.getSoupServerHeartbeatEvent(buffer));
            case 'Z':
                return dispatchSoupEndOfSession(msgs.getSoupEndOfSessionEvent(buffer));
            case 'L':
                return dispatchSoupLoginRequest(msgs.getSoupLoginRequestEvent(buffer));
            case 'U':
                return dispatchSoupUnsequencedData(msgs.getSoupUnsequencedDataEvent(buffer));
            case 'R':
                return dispatchSoupClientHeartbeat(msgs.getSoupClientHeartbeatEvent(buffer));
            case 'O':
                return dispatchSoupLogoutRequest(msgs.getSoupLogoutRequestEvent(buffer));
            default:
                return false;
        }
    }
}
